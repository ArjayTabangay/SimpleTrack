@using MudBlazor
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="CustomTheme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Color="Color.Primary" Fixed="true">
        <MudIconButton Icon="Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudText Typo="Typo.h6" Class="ml-3">SimpleTrack Admin</MudText>
        <MudSpacer />

        <MudTextField @bind-Value="_searchText"
                      Placeholder="Search parcels..."
                      Adornment="Adornment.End"
                      AdornmentIcon="Icons.Material.Filled.Search"
                      IconSize="Size.Medium"
                      Class="mr-6 mt-0"
                      Style="max-width: 300px;"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense"
                      OnAdornmentClick="SearchParcels" />

        <MudMenu Icon="@Icons.Material.Filled.Notifications"
                 Color="Color.Inherit"
                 Direction="Direction.Bottom"
                 OffsetX="true">
            <MudMenuItem>
                <div class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.LocalShipping" Class="mr-3" />
                    <div>
                        <MudText Typo="Typo.body2">5 parcels in transit</MudText>
                        <MudText Typo="Typo.caption" Class="mud-text-secondary">2 minutes ago</MudText>
                    </div>
                </div>
            </MudMenuItem>
            <MudMenuItem>
                <div class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.Warning" Color="Color.Warning" Class="mr-3" />
                    <div>
                        <MudText Typo="Typo.body2">Delayed shipment alert</MudText>
                        <MudText Typo="Typo.caption" Class="mud-text-secondary">15 minutes ago</MudText>
                    </div>
                </div>
            </MudMenuItem>
            <MudDivider />
            <MudMenuItem>
                <MudText Typo="Typo.body2" Color="Color.Primary">View all notifications</MudText>
            </MudMenuItem>
        </MudMenu>

        <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                       Color="Color.Inherit"
                       OnClick="@ToggleTheme"
                       Title="Toggle theme" />

        <MudMenu Icon="@Icons.Material.Filled.AccountCircle"
                 Color="Color.Inherit"
                 Direction="Direction.Bottom"
                 OffsetX="true">
            <MudMenuItem>
                <div class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.Person" Class="mr-3" />
                    Profile
                </div>
            </MudMenuItem>
            <MudMenuItem>
                <div class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-3" />
                    Settings
                </div>
            </MudMenuItem>
            <MudDivider />
            <MudMenuItem>
                <div class="d-flex align-center">
                    <MudIcon Icon="@Icons.Material.Filled.Logout" Class="mr-3" />
                    Logout
                </div>
            </MudMenuItem>
        </MudMenu>
    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen"
               Elevation="2"
               Variant="@DrawerVariant.Mini"
               OpenMiniOnHover="true"
               ClipMode="DrawerClipMode.Always">
        <MudDrawerHeader Class="pa-6">
            <MudText Typo="Typo.h6" Color="Color.Primary">
                <MudIcon Icon="@Icons.Material.Filled.LocalShipping" Class="mr-2" />
                ST
            </MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudNavLink Href="/admin" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">Dashboard</MudNavLink>
            <MudNavLink Href="/admin/parcels" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.LocalShipping">Parcels</MudNavLink>
            <MudNavLink Href="/admin/tracking" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MyLocation">Live Tracking</MudNavLink>
            <MudNavGroup Text="Analytics" Icon="@Icons.Material.Filled.Analytics" Expanded="true">
                <MudNavLink Href="/admin/reports" Icon="@Icons.Material.Filled.Assessment">Reports</MudNavLink>
                <MudNavLink Href="/admin/charts" Icon="@Icons.Material.Filled.ShowChart">Charts</MudNavLink>
            </MudNavGroup>
            <MudNavLink Href="/admin/customers" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">Customers</MudNavLink>
            <MudDivider />
            <MudNavLink Href="/admin/settings" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Settings">Settings</MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent Class="pt-16 px-16">
        <MudContainer MaxWidth="MaxWidth.False" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode;
    private string _searchText = string.Empty;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider is not null)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;
    private Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        return Task.CompletedTask;
    }

    private void SearchParcels()
    {
        if (!string.IsNullOrWhiteSpace(_searchText))
            Snackbar.Add($"Searching for: {_searchText}", Severity.Info);
    }

    private static MudTheme CustomTheme => new MudTheme
    {
        PaletteLight = new PaletteLight
        {
            Primary = "#2E7D32",
            Secondary = "#FF6F00",
            Success = "#4CAF50",
            Warning = "#FF9800",
            Error = "#F44336",
            Info = "#2196F3",
            AppbarBackground = "#1B5E20",
            Surface = "#FAFAFA",
            DrawerBackground = "#FFFFFF",
            DrawerText = "rgba(0,0,0, 0.87)",
            AppbarText = "rgba(255,255,255, 0.70)"
        },
        PaletteDark = new PaletteDark
        {
            Primary = "#4CAF50",
            Secondary = "#FFB74D",
            Success = "#66BB6A",
            Warning = "#FFB74D",
            Error = "#EF5350",
            Info = "#42A5F5",
            AppbarBackground = "#1B1B1B",
            Surface = "#121212",
            Background = "#0D0D0D",
            DrawerBackground = "#1B1B1B",
            DrawerText = "rgba(255,255,255, 0.50)"
        },
        LayoutProperties = new LayoutProperties
        {
            DrawerWidthLeft = "260px",
            DrawerWidthRight = "300px"
        }
    };
}